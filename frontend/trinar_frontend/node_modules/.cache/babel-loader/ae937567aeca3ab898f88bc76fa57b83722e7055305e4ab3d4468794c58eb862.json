{"ast":null,"code":"var _jsxFileName = \"/home/junior-silva/Trinar/frontend/trinar_frontend/src/components/ResetPassword.js\",\n  _s = $RefreshSig$();\n// frontend/trinar_frontend/src/\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    uid,\n    token\n  } = useParams();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setError(\"As senhas não coincidem.\");\n      return;\n    }\n    try {\n      const csrfToken = Cookies.get(\"csrftoken\");\n      const response = await axios.post(`http://localhost:8000/api/password-reset-confirm/${uid}/${token}/`, {\n        new_password: newPassword\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": csrfToken\n        },\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        navigate(\"/login\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Erro ao redefinir a senha.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Redefinir Senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"RfBOnOMJUG5WNCXMj9x+ToWtbao=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useParams","useNavigate","Cookies","jsxDEV","_jsxDEV","ResetPassword","_s","uid","token","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","navigate","handleSubmit","e","preventDefault","csrfToken","get","response","post","new_password","headers","withCredentials","status","err","_err$response","_err$response$data","data","onSubmit","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/junior-silva/Trinar/frontend/trinar_frontend/src/components/ResetPassword.js"],"sourcesContent":["// frontend/trinar_frontend/src/\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nconst ResetPassword = () => {\n  const { uid, token } = useParams();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (newPassword !== confirmPassword) {\n      setError(\"As senhas não coincidem.\");\n      return;\n    }\n\n    try {\n      const csrfToken = Cookies.get(\"csrftoken\");\n\n      const response = await axios.post(\n        `http://localhost:8000/api/password-reset-confirm/${uid}/${token}/`,\n        { new_password: newPassword },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRFToken\": csrfToken,\n          },\n          withCredentials: true,\n        }\n      );\n\n      if (response.status === 200) {\n        navigate(\"/login\");\n      }\n    } catch (err) {\n      setError(err.response?.data?.error || \"Erro ao redefinir a senha.\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"password\"\n        value={newPassword}\n        onChange={(e) => setNewPassword(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        value={confirmPassword}\n        onChange={(e) => setConfirmPassword(e.target.value)}\n      />\n      <button type=\"submit\">Redefinir Senha</button>\n      {error && <p>{error}</p>}\n    </form>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}