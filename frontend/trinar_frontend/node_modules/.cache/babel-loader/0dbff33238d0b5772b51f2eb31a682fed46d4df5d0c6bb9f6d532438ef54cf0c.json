{"ast":null,"code":"var _s = $RefreshSig$();\n// frontend/trinar_frontend/src/components/RequestPasswordReset.js\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nconst RequestPasswordReset = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const csrfToken = Cookies.get(\"csrftoken\");\n      const response = await axios.post(\"http://localhost:8000/api/password-reset/\", {\n        email\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": csrfToken\n        },\n        withCredentials: true\n      });\n\n      // Verifica a resposta da requisição\n      console.log(\"Resposta do servidor:\", response.data);\n      setMessage(\"Email enviado com sucesso! Verifique sua caixa de entrada.\");\n      setError(\"\");\n    } catch (err) {\n      console.error(\"Erro:\", err.response ? err.response.data : err.message);\n      setError(\"Erro ao solicitar redefinição de senha. Verifique o email e tente novamente.\");\n      setMessage(\"\");\n    }\n  };\n};\n_s(RequestPasswordReset, \"93h/aJO5x+HN7i+YpQwepLaFL6Q=\");\n_c = RequestPasswordReset;\nexport default RequestPasswordReset;\nvar _c;\n$RefreshReg$(_c, \"RequestPasswordReset\");","map":{"version":3,"names":["React","useState","axios","Cookies","RequestPasswordReset","_s","email","setEmail","message","setMessage","error","setError","handleSubmit","e","preventDefault","csrfToken","get","response","post","headers","withCredentials","console","log","data","err","_c","$RefreshReg$"],"sources":["/home/junior-silva/Trinar/frontend/trinar_frontend/src/components/RequestPasswordReset.js"],"sourcesContent":["// frontend/trinar_frontend/src/components/RequestPasswordReset.js\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst RequestPasswordReset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const csrfToken = Cookies.get(\"csrftoken\");\n      const response = await axios.post(\n        \"http://localhost:8000/api/password-reset/\",\n        { email },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRFToken\": csrfToken,\n          },\n          withCredentials: true,\n        }\n      );\n\n      // Verifica a resposta da requisição\n      console.log(\"Resposta do servidor:\", response.data);\n\n      setMessage(\"Email enviado com sucesso! Verifique sua caixa de entrada.\");\n      setError(\"\");\n    } catch (err) {\n      console.error(\"Erro:\", err.response ? err.response.data : err.message);\n      setError(\n        \"Erro ao solicitar redefinição de senha. Verifique o email e tente novamente.\"\n      );\n      setMessage(\"\");\n    }\n  };\n\n  \n};\n\nexport default RequestPasswordReset;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAE/B,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAMC,SAAS,GAAGZ,OAAO,CAACa,GAAG,CAAC,WAAW,CAAC;MAC1C,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAC/B,2CAA2C,EAC3C;QAAEZ;MAAM,CAAC,EACT;QACEa,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,aAAa,EAAEJ;QACjB,CAAC;QACDK,eAAe,EAAE;MACnB,CACF,CAAC;;MAED;MACAC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEL,QAAQ,CAACM,IAAI,CAAC;MAEnDd,UAAU,CAAC,4DAA4D,CAAC;MACxEE,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZH,OAAO,CAACX,KAAK,CAAC,OAAO,EAAEc,GAAG,CAACP,QAAQ,GAAGO,GAAG,CAACP,QAAQ,CAACM,IAAI,GAAGC,GAAG,CAAChB,OAAO,CAAC;MACtEG,QAAQ,CACN,8EACF,CAAC;MACDF,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;AAGH,CAAC;AAACJ,EAAA,CArCID,oBAAoB;AAAAqB,EAAA,GAApBrB,oBAAoB;AAuC1B,eAAeA,oBAAoB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}