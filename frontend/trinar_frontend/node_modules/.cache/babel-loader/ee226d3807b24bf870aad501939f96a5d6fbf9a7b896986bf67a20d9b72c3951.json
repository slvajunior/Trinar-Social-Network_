{"ast":null,"code":"var _jsxFileName = \"/home/junior-silva/Trinar/frontend/trinar_frontend/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  // Estado para armazenar os posts (Trinados)\n  const [posts, setPosts] = useState([]);\n\n  // Simulação de fetch dos posts\n  useEffect(() => {\n    // Aqui você pode chamar a API para buscar os posts reais\n    const fetchPosts = async () => {\n      // Exemplo de posts simulados\n      const postsData = [{\n        id: 1,\n        user: \"João\",\n        content: \"Meu primeiro Trinado!\",\n        date: \"2025-01-15\"\n      }, {\n        id: 2,\n        user: \"Maria\",\n        content: \"Explorando o Trinar!\",\n        date: \"2025-01-14\"\n      }\n      // Mais posts aqui\n      ];\n      setPosts(postsData);\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bem-vindo ao Trinar!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), \" | \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 49\n      }, this), \" |\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/logout\",\n        children: \"Sair\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: post.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","fetchPosts","postsData","id","user","content","date","children","fileName","_jsxFileName","lineNumber","columnNumber","to","className","map","post","_c","$RefreshReg$"],"sources":["/home/junior-silva/Trinar/frontend/trinar_frontend/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  // Estado para armazenar os posts (Trinados)\n  const [posts, setPosts] = useState([]);\n\n  // Simulação de fetch dos posts\n  useEffect(() => {\n    // Aqui você pode chamar a API para buscar os posts reais\n    const fetchPosts = async () => {\n      // Exemplo de posts simulados\n      const postsData = [\n        { id: 1, user: \"João\", content: \"Meu primeiro Trinado!\", date: \"2025-01-15\" },\n        { id: 2, user: \"Maria\", content: \"Explorando o Trinar!\", date: \"2025-01-14\" },\n        // Mais posts aqui\n      ];\n      setPosts(postsData);\n    };\n\n    fetchPosts();\n  }, []);\n\n  return (\n    <div>\n      <h1>Bem-vindo ao Trinar!</h1>\n      <nav>\n        <Link to=\"/register\">Registrar</Link> | <Link to=\"/login\">Entrar</Link> |{\" \"}\n        <Link to=\"/logout\">Sair</Link>\n      </nav>\n\n      <div className=\"timeline\">\n        {posts.map((post) => (\n          <div key={post.id} className=\"post\">\n            <h3>{post.user}</h3>\n            <p>{post.content}</p>\n            <small>{post.date}</small>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B;MACA,MAAMC,SAAS,GAAG,CAChB;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAE,uBAAuB;QAAEC,IAAI,EAAE;MAAa,CAAC,EAC7E;QAAEH,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAE,sBAAsB;QAAEC,IAAI,EAAE;MAAa;MAC5E;MAAA,CACD;MACDN,QAAQ,CAACE,SAAS,CAAC;IACrB,CAAC;IAEDD,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7Bf,OAAA;MAAAW,QAAA,gBACEX,OAAA,CAACF,IAAI;QAACkB,EAAE,EAAC,WAAW;QAAAL,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,OAAG,eAAAf,OAAA,CAACF,IAAI;QAACkB,EAAE,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,MAAE,EAAC,GAAG,eAC7Ef,OAAA,CAACF,IAAI;QAACkB,EAAE,EAAC,SAAS;QAAAL,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eAENf,OAAA;MAAKiB,SAAS,EAAC,UAAU;MAAAN,QAAA,EACtBR,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACdnB,OAAA;QAAmBiB,SAAS,EAAC,MAAM;QAAAN,QAAA,gBACjCX,OAAA;UAAAW,QAAA,EAAKQ,IAAI,CAACX;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpBf,OAAA;UAAAW,QAAA,EAAIQ,IAAI,CAACV;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBf,OAAA;UAAAW,QAAA,EAAQQ,IAAI,CAACT;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAHlBI,IAAI,CAACZ,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CAvCID,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AAyCV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}