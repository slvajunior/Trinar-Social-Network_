{"ast":null,"code":"var _jsxFileName = \"/home/junior-silva/Trinar/frontend/trinar_frontend/src/components/RequestPasswordReset.js\",\n  _s = $RefreshSig$();\n// frontend/trinar_frontend/src/components/RequestPasswordReset.js\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequestPasswordReset = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const csrfToken = Cookies.get(\"csrftoken\");\n      const response = await axios.post(\"http://localhost:8000/api/password-reset/\", {\n        email\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRFToken\": csrfToken\n        },\n        withCredentials: true\n      });\n\n      // Verifica a resposta da requisição\n      console.log(\"Resposta do servidor:\", response.data);\n      setMessage(\"Email enviado com sucesso! Verifique sua caixa de entrada.\");\n      setError(\"\");\n    } catch (err) {\n      console.error(\"Erro:\", err.response ? err.response.data : err.message);\n      setError(\"Erro ao solicitar redefinição de senha. Verifique o email e tente novamente.\");\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Redefinir Senha\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Solicitar Redefini\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(RequestPasswordReset, \"93h/aJO5x+HN7i+YpQwepLaFL6Q=\");\n_c = RequestPasswordReset;\nexport default RequestPasswordReset;\nvar _c;\n$RefreshReg$(_c, \"RequestPasswordReset\");","map":{"version":3,"names":["React","useState","axios","Cookies","jsxDEV","_jsxDEV","RequestPasswordReset","_s","email","setEmail","message","setMessage","error","setError","handleSubmit","e","preventDefault","csrfToken","get","response","post","headers","withCredentials","console","log","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/junior-silva/Trinar/frontend/trinar_frontend/src/components/RequestPasswordReset.js"],"sourcesContent":["// frontend/trinar_frontend/src/components/RequestPasswordReset.js\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nconst RequestPasswordReset = () => {\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const csrfToken = Cookies.get(\"csrftoken\");\n      const response = await axios.post(\n        \"http://localhost:8000/api/password-reset/\",\n        { email },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRFToken\": csrfToken,\n          },\n          withCredentials: true,\n        }\n      );\n\n      // Verifica a resposta da requisição\n      console.log(\"Resposta do servidor:\", response.data);\n\n      setMessage(\"Email enviado com sucesso! Verifique sua caixa de entrada.\");\n      setError(\"\");\n    } catch (err) {\n      console.error(\"Erro:\", err.response ? err.response.data : err.message);\n      setError(\n        \"Erro ao solicitar redefinição de senha. Verifique o email e tente novamente.\"\n      );\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Redefinir Senha</h2>\n      {/* Mensagens de sucesso ou erro */}\n      {message && <p style={{ color: \"green\" }}>{message}</p>}{\" \"}\n      {/* Mensagem de sucesso */}\n      {error && <p style={{ color: \"red\" }}>{error}</p>}{\" \"}\n      {/* Mensagem de erro */}\n      <form onSubmit={handleSubmit}>\n        <label>\n          Email:\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\">Solicitar Redefinição</button>\n      </form>\n    </div>\n  );\n};\n\nexport default RequestPasswordReset;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}